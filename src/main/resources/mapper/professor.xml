<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.cyber.university.repository.interfaces.ProfessorRepository">
	<!-- 24.03.11 교수 내 정보 조회 -->
	<select id="selectProfessorInfoWithCollegeAndDepartment"
		resultType="com.cyber.university.dto.response.ProfessorInfoDto">
		select p.*, c.name as collegeName, d.name as deptName
		from
		cu_professor p
		join cu_department d on p.dept_id = d.id
		join cu_college
		c on d.college_id = c.id
		where p.id = #{id}
	</select>

	<!-- 24.03.11 교수 개인 정보 조회 -->
	<select id="selectProfessorInfo"
		resultType="com.cyber.university.dto.professor.UpdateProfessorInfoDto">
		select p.id, p.address, p.tel, p.email, u.password
		from
		cu_professor p
		join cu_user u on p.id = u.id
		where p.id = #{id}
	</select>


	<select id="selectByProfessorId"
		resultType="com.cyber.university.repository.model.Professor">
		SELECT * FROM cu_professor WHERE id = #{professorId}
	</select>



	<select id="selectByDepartmentId"
		resultType="com.cyber.university.repository.model.Professor">
		SELECT * FROM cu_professor
		WHERE dept_id = #{deptId}
		LIMIT
		#{page}, 20
	</select>


	<select id="selectProfessorList"
		resultType="com.cyber.university.repository.model.Professor">
		SELECT * FROM cu_professor
		LIMIT #{page}, 20
	</select>


	<select id="selectProfessorAmountByDeptId" resultType="integer">
		SELECT
		count(id) FROM cu_professor
		WHERE dept_id = #{deptId}
	</select>

	<select id="selectProfessorAmount" resultType="integer">
		SELECT count(id)
		FROM cu_professor
	</select>


	<insert id="insertToProfessor">
		INSERT INTO cu_professor (name, birth_date, gender,
		address, tel, dept_id, email)
		VALUES (#{name}, #{birthDate}, #{gender},
		#{address}, #{tel}, #{deptId}, #{email})
	</insert>


	<select id="selectIdByCreateProfessorDto" resultType="integer">
		SELECT id
		FROM cu_professor
		WHERE name = #{name}
		AND birth_date = #{birthDate}
		AND
		gender = #{gender}
		AND address =#{address}
		AND tel = #{tel}
		AND dept_id =
		#{deptId}
		AND email = #{email}

	</select>


	<select id="selectIdByNameAndEmail" resultType="integer">
		SELECT id
		FROM
		cu_professor
		WHERE name = #{name}
		AND email = #{email}
	</select>


	<select id="selectProfessorByIdAndNameAndEmail"
		resultType="integer">
		SELECT id
		FROM cu_professor
		WHERE id = #{id}
		AND name =
		#{name}
		AND email = #{email}
	</select>



	<select id="selectProfessorInfoById"
		resultType="com.cyber.university.dto.response.ProfessorInfoDto">
		SELECT p.id, p.name, p.birth_date, p.gender, p.address,
		p.tel, p.email, d.name AS dept_name, c.name AS college_name
		FROM
		cu_professor AS p
		LEFT
		JOIN cu_department AS d
		ON p.dept_id = d.id
		LEFT
		JOIN cu_college AS c
		ON d.college_id = c.id
		WHERE p.id = #{id};
	</select>



	<select id="selectByUserId"
		resultType="com.cyber.university.dto.response.UserInfoForUpdateDto">
		SELECT address, tel, email
		FROM cu_professor
		WHERE id =
		#{userId}
	</select>



	<update id="updateProfessor">
		UPDATE cu_professor SET
		address = #{address}, tel =
		#{tel}, email = #{email}
		WHERE id = #{userId}
	</update>

	<!-- 24.03.13 강의 등록 -->
	<insert id="insertApplySubject">
		insert into cu_apply_sub(pro_id, sub_name, pro_name, sub_time, type, sub_grade, capacity)
		values(#{proId}, #{subName}, #{proName}, #{subTime}, #{type}, #{subGrade} , #{capacity})
	</insert>

	<!-- 24.03.13 강의 이름 찾기 -->
	<select id="selectSubName"
		resultType="com.cyber.university.dto.professor.ApplySubjectDto">
		select * from cu_apply_sub where sub_name = #{subName}
	</select>
	
	<!-- 24.03.13 교수 본인 강의 조회 -->
	<select id="selectSemester" resultType="com.cyber.university.dto.professor.SubjectPeriodForProfessorDto">
	    SELECT sub_year, semester FROM cu_subject
		WHERE professor_id = #{id}
		GROUP BY sub_year, semester 
	</select>
	
		
	<!-- 24.03.19 교수 본인 강의 개강 년도와 학기 조회 -->
	<select id="selectSubjectBySemester" resultType="com.cyber.university.dto.response.SubjectForProfessorDto">
		SELECT * FROM cu_subject
		WHERE professor_id = #{id}
		AND sub_year = #{subYear}
		AND semester = #{semester}
	</select>
	

	<select id="findProfessorAndDept"
		resultType="com.cyber.university.dto.professor.ProfessorAndSubjectFormDto">
		select p.id, p.name, c.name as 'dept_name' from cu_professor as p
		join cu_department as c
		on c.id = p.dept_id
	</select>

	<!-- 24.03.15 강의 신청한 학생 리스트 조회 -->
	<select id="selectMySubDetailList" resultType="com.cyber.university.dto.professor.MysubjectDetailDto">
		select a.*, b.name as studentName, c.name as departmentName, d.name as subjectName 
		from cu_stu_sub_detail a
		join cu_student b on b.id = a.student_id
		join cu_department c on c.id = b.dept_id
		join cu_subject d on d.id = a.subject_id
		where a.subject_id = #{subjectId}
	</select>
	
	<!-- 24.03.15 강의 이름 찾기 -->
	<select id="selectSubjectName" resultType="com.cyber.university.dto.professor.SubjectNameDto">
		select name as subjectName from cu_subject where id = #{subjectId}
	</select>
	
	<!-- 24.03.16 학생 성적 입력 -->
	<update id="updateStudentSubDetail">
		update cu_stu_sub_detail 
		set
		absent = #{absent}, lateness = #{lateness}, homework = #{homework}, mid_exam = #{midExam}, final_exam = #{finalExam}, converted_mark = #{convertedMark}
		where student_id = #{studentId} and subject_id = #{subjectId}
	</update>
	
	<!-- 24.03.16 학생 성적 입력 -->
	<update id="updateStudentGrade">
		UPDATE cu_stu_sub
		SET grade = #{grade}, complete_grade = #{completeGrade}
		WHERE student_id = #{studentId}
		AND subject_id = #{subjectId}
	</update>
	
	<!-- 24.03.16 이수 학점 찾기 -->
	<select id="selectGradesInfo" resultType="com.cyber.university.dto.professor.UpdateStudentSubDetailDto">
		select grades from cu_subject where id = #{subjectId}
	</select>
	
	<!-- 24.03.18 강의평가 과목 조회 -->
	<select id="selectEvaluationDto" resultType="com.cyber.university.dto.professor.MyEvaluationDto">
		SELECT DISTINCT s.name  
		FROM cu_evaluation AS e
		INNER JOIN cu_subject AS s
		ON e.subject_id = s.id
		WHERE s.professor_id = #{professorId}
	</select>
	
	<!-- 24.03.18 과목별 강의 평가 조회 -->
	<select id="selectEvaluationDtoByprofessorIdAndName" resultType="com.cyber.university.dto.professor.MyEvaluationDto">
		SELECT s.name, s.professor_id, e.*  
		FROM cu_evaluation AS e
		INNER JOIN cu_subject AS s
		ON e.subject_id = s.id
		WHERE s.professor_id = #{professorId} AND s.name= #{name}
	</select>
	
	<!-- 강의평가 조회 -->
	<select id="selectMyEvaluationDtoByProfessorId" resultType="com.cyber.university.dto.professor.MyEvaluationDto">
		SELECT s.name, s.professor_id, e.*  
		FROM cu_evaluation AS e
		INNER JOIN cu_subject AS s
		ON e.subject_id = s.id
		WHERE s.professor_id = #{professorId};
	</select>
	
	<!-- 24.03.19 강의계획서 조회 -->
	<select id="selectSyllabusBySubjectId" resultType="com.cyber.university.dto.response.ReadSyllabusDto">
		SELECT sy.subject_id, s.name, s.sub_year, s.semester, s.grades, s.type, s.sub_day, s.start_time, s.end_time, s.room_id, 
		c.name college_name, p.name as professor_name, d.name as dept_name, p.tel, p.email, sy.overview, sy.objective, sy.textbook, sy.program
		FROM cu_subject AS s
		LEFT JOIN cu_professor AS p ON s.professor_id = p.id
		LEFT JOIN cu_department AS d ON p.dept_id = d.id
		LEFT JOIN cu_syllabus AS sy ON s.id = sy.subject_id
		LEFT JOIN cu_room AS r ON s.room_id = r.id
		LEFT JOIN cu_college AS c ON r.college_id = c.id
		WHERE subject_id = #{subjectId};
	</select>
	
	<!-- 24.03.19 강의계획서 수정 -->
	<update id="updateSyllabus">
		UPDATE cu_syllabus SET
		overview = #{overview},
		objective = #{objective},
		textbook = #{textbook},
		program = #{program}
		WHERE subject_id = #{subjectId}
	</update>
</mapper>        
