<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.cyber.university.repository.interfaces.SubjectRepository">

	<insert id="insert">
		insert into cu_subject (name, professor_id, room_id,
		dept_id, type, sub_year, semester, sub_day, start_time, end_time,
		grades, capacity)
		values(#{name}, #{professorId}, #{roomId}, #{deptId},
		#{type}, #{subYear}, #{semester},
		#{subDay}, #{startTime}, #{endTime}, #{grades}, #{capacity})
	</insert>


	<delete id="deleteById">
		delete from cu_subject where id = #{id}
	</delete>


	<update id="updateBySubjectDto">
		UPDATE cu_subject
		SET name = #{name}, room_id =
		#{roomId}, sub_day = #{subDay}, start_time = #{startTime}, end_time =
		#{endTime}, capacity = #{capacity}
		WHERE id = #{id}
	</update>



	<select id="findSubjectsByRoomIdAndDayAndYearAndSemester"
		resultType="com.cyber.university.repository.model.Subject">
		select * from cu_subject
		where room_id = #{roomId} and
		sub_day = #{subDay} and sub_year = #{subYear} and semester =
		#{semester}
	</select>


	<select id="findIdByOrderById" resultType="integer">
		SELECT id FROM
		cu_subject
		where name=#{name} and room_id=#{roomId} and sub_year=#{subYear} and
		semester=#{semester} and
		sub_day=#{subDay} and start_time=#{startTime} and end_time=#{endTime}
	</select>


	<select id="selectAll"
		resultType="com.cyber.university.repository.model.Subject">
		select * from cu_subject
	</select>



	<select id="selectSubjectById"
		resultType="com.cyber.university.repository.model.Subject">
		SELECT * FROM cu_subject
		WHERE id = #{id};
	</select>


<select id="selectDtoAll" resultType="com.cyber.university.dto.response.SubjectDto">
		SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
		FROM cu_subject AS sub
		JOIN cu_department AS dept
		ON sub.dept_id = dept.id
		JOIN cu_college AS coll
		ON dept.college_id = coll.id
		JOIN cu_professor AS prof
		ON sub.professor_id = prof.id
	</select>
	
	<select id="selectDtoAllLimit" resultType="com.cyber.university.dto.response.SubjectDto">
		SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
		FROM cu_subject AS sub
		JOIN cu_department AS dept
		ON sub.dept_id = dept.id
		JOIN cu_college AS coll
		ON dept.college_id = coll.id
		JOIN cu_professor AS prof
		ON sub.professor_id = prof.id
		LIMIT #{page}, 20
	</select>
	
	
	<select id="selectDtoBySemester" resultType="com.cyber.university.dto.response.SubjectDto">
		SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
		FROM cu_subject AS sub
		JOIN cu_department AS dept
		ON sub.dept_id = dept.id
		JOIN cu_college AS coll
		ON dept.college_id = coll.id
		JOIN cu_professor AS prof
		ON sub.professor_id = prof.id
		WHERE sub_year = #{subYear} AND semester = #{semester}
	</select>
	
	<select id="selectDtoBySemesterLimit" resultType="com.cyber.university.dto.response.SubjectDto">
		SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
		FROM cu_subject AS sub
		JOIN cu_department AS dept
		ON sub.dept_id = dept.id
		JOIN cu_college AS coll
		ON dept.college_id = coll.id
		JOIN cu_professor AS prof
		ON sub.professor_id = prof.id
		WHERE sub_year = #{subYear} AND semester = #{semester}
		LIMIT #{page}, 20
	</select>
	
	
	
	<select id="selectDtoBySemesterAndDeptAndName" resultType="com.cyber.university.dto.response.SubjectDto">

		<!-- 개설학과 : 전체 -->
		<if test="deptId == -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
		</if>

		<!-- 특정 개설학과 -->
		<if test="deptId != -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.dept_id = #{deptId}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
		</if>
	</select>
	
	<select id="selectDtoBySemesterAndDeptAndNameLimit" resultType="com.cyber.university.dto.response.SubjectDto">

		<!-- 개설학과 : 전체 -->
		<if test="deptId == -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
			LIMIT #{page}, 20
		</if>

		<!-- 특정 개설학과 -->
		<if test="deptId != -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.dept_id = #{deptId}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
			LIMIT #{page}, 20
		</if>
	</select>

	<select id="selectDtoBySemesterAndAndTypeAndDeptAndName" resultType="com.cyber.university.dto.response.SubjectDto">

		<!-- 강의구분 : 전체 & 개설학과 : 전체 -->
		<if test="type == '전체' and deptId == -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
		</if>

		<!-- 강의구분 : 전체 & 개설학과 : 특정 -->
		<if test="type == '전체' and deptId != -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.dept_id = #{deptId}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
		</if>

		<!-- 강의구분 : 특정 & 개설학과 : 전체 -->
		<if test="type != '전체' and deptId == -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year =
			#{subYear}
			AND sub.semester = #{semester}
			AND sub.type = #{type}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
		</if>

		<!-- 강의구분 : 특정 & 개설학과 : 특정 -->
		<if test="type != '전체' and deptId != -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.type = #{type}
			AND sub.dept_id = #{deptId}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
		</if>
	</select>
	
	<select id="selectDtoBySemesterAndAndTypeAndDeptAndNameLimit" resultType="com.cyber.university.dto.response.SubjectDto">

		<!-- 강의구분 : 전체 & 개설학과 : 전체 -->
		<if test="type == '전체' and deptId == -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
			LIMIT #{page}, 20
		</if>

		<!-- 강의구분 : 전체 & 개설학과 : 특정 -->
		<if test="type == '전체' and deptId != -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.dept_id = #{deptId}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
			LIMIT #{page}, 20
		</if>

		<!-- 강의구분 : 특정 & 개설학과 : 전체 -->
		<if test="type != '전체' and deptId == -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year =
			#{subYear}
			AND sub.semester = #{semester}
			AND sub.type = #{type}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
			LIMIT #{page}, 20
		</if>

		<!-- 강의구분 : 특정 & 개설학과 : 특정 -->
		<if test="type != '전체' and deptId != -1">
			SELECT sub.*, dept.name AS dept_name, coll.name AS coll_name, prof.name AS professor_name
			FROM cu_subject AS sub
			JOIN cu_department AS dept
			ON sub.dept_id = dept.id
			JOIN cu_college AS coll
			ON dept.college_id = coll.id
			JOIN cu_professor AS prof
			ON sub.professor_id = prof.id
			WHERE sub.sub_year = #{subYear}
			AND sub.semester = #{semester}
			AND sub.type = #{type}
			AND sub.dept_id = #{deptId}
			AND sub.name LIKE CONCAT('%', #{name}, '%')
			LIMIT #{page}, 20
		</if>
	</select>

	<select id="selectSyllabusBySubjectId" resultType="com.cyber.university.dto.response.ReadSyllabusDto">
		SELECT sy.subject_id, s.name, s.sub_year, s.semester, s.grades, s.type, s.sub_day, s.start_time, s.end_time, s.room_id, 
		c.name college_name, p.name as professor_name, d.name as dept_name, p.tel, p.email, sy.overview, sy.objective, sy.textbook, sy.program
		FROM cu_subject AS s
		LEFT JOIN cu_professor AS p
		ON s.professor_id = p.id
		LEFT JOIN cu_department AS d
		ON p.dept_id = d.id
		LEFT JOIN cu_syllabus AS sy
		ON s.id = sy.subject_id
		LEFT JOIN cu_room AS r
		ON s.room_id = r.id
		LEFT JOIN cu_college AS c
		ON r.college_id = c.id
		WHERE subject_id = #{subjectId};
	</select>
	
	<!-- 성희 / insert한 제일 최근 강의 ID 조회 -->
	<select id="selectIdOrderById" resultType="integer">
		SELECT id FROM cu_subject 
		where name=#{name} and room_id=#{roomId} and sub_year=#{subYear} and semester=#{semester} and 
		sub_day=#{subDay} and start_time=#{startTime} and end_time=#{endTime}
	</select>
	
	<update id="updateNumOfStudent">
		<if test="type == '추가'">
			UPDATE cu_subject SET num_of_student = num_of_student + 1
			WHERE id = #{id}
		</if>
		
		<if test="type == '삭제'">
			UPDATE cu_subject SET num_of_student = num_of_student - 1
			WHERE id = #{id}
		</if>
		
		<if test="type == '초기화'">
			UPDATE cu_subject SET num_of_student = 0
			WHERE id = #{id}
		</if>
	</update>
	
	<select id="selectIdByLessNumOfStudent" resultType="Integer">
		SELECT id FROM cu_subject
		WHERE capacity >= num_of_student
	</select>
	
	<select id="selectIdByMoreNumOfStudent" resultType="Integer">
		SELECT id FROM cu_subject
		WHERE num_of_student > capacity
	</select>



</mapper>