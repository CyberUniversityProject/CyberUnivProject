<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper
	namespace="com.cyber.university.repository.interfaces.StudentRepository">


	<select id="selectByStudentId"
		resultType="com.cyber.university.repository.model.Student">
		<![CDATA[SELECT * FROM cu_student WHERE id = #{studentId}]]>
	</select>



	<select id="selectIdList" resultType="Integer">
		<![CDATA[SELECT id FROM cu_student]]>
	</select>


	<select id="selectByDepartmentId"
		resultType="com.cyber.university.repository.model.Student">
		<![CDATA[SELECT * FROM cu_student
		WHERE dept_id = #{deptId}
		LIMIT
		#{page}, 20]]>
	</select>


	<select id="selectStudentAmountByDeptId" resultType="Integer">
		<![CDATA[SELECT
		count(id) FROM cu_student
		WHERE dept_id = #{deptId}]]>
	</select>


	<select id="selectStudentAmount" resultType="Integer">
		<![CDATA[SELECT count(id)
		FROM cu_student]]>
	</select>

	<!-- 페이지로부터 학생 전체 조회 -->
	<select id="selectStudentList"
		resultType="com.cyber.university.repository.model.Student">
		<![CDATA[SELECT * FROM cu_student
		LIMIT #{page}, 20]]>
	</select>

	<select id="findStudentById"
		resultType="com.cyber.university.dto.response.StudentInfoDto">
		<![CDATA[SELECT
		s.* ,
		d.name AS deptName,
		c.name AS collegeName
		FROM
		cu_student AS s
		LEFT JOIN cu_department AS d
		ON
		s.dept_id = d.id
		LEFT JOIN
		cu_college AS c
		ON d.college_id = c.id
		WHERE
		s.id = #{userId}]]>
	</select>


	<insert id="insertToStudent">
		<![CDATA[INSERT INTO cu_student (name, birth_date, gender,
		address, tel, dept_id, entrance_date, email, origin_file_name, upload_file_name)
		VALUES (#{name},
		#{birthDate}, #{gender}, #{address}, #{tel}, #{deptId},
		#{entranceDate}, #{email}, #{originFileName}, #{uploadFileName})]]>
	</insert>


	<select id="selectIdByCreateStudentDto" resultType="integer">
		<![CDATA[SELECT id
		FROM cu_student
		WHERE name = #{name}
		AND birth_date = #{birthDate}
		AND
		gender = #{gender}
		AND address =#{address}
		AND tel = #{tel}
		AND
		dept_id =
		#{deptId}
		AND entrance_date = #{entranceDate}
		AND email = #{email}]]>

	</select>



	<select id="selectIdByNameAndEmail" resultType="integer">
		<![CDATA[SELECT id
		FROM
		cu_student
		WHERE name = #{name}
		AND email = #{email}]]>
	</select>



	<select id="selectStudentByIdAndNameAndEmail"
		resultType="integer">
		<![CDATA[SELECT id
		FROM cu_student
		WHERE id = #{id}
		AND name = #{name}
		AND email = #{email}]]>
	</select>
	
	
	
	
	<select id="selectStudentInfoById" resultType="com.cyber.university.dto.response.StudentInfoDto">
		<![CDATA[SELECT s.id, s.name, s.birth_date, s.gender, s.address, s.tel, s.email, s.grade, s.semester, s.entrance_date, s.graduation_date, s.origin_file_name, s.upload_file_name, d.name AS
		dept_name, c.name AS college_name
		FROM cu_student AS s
		LEFT JOIN cu_department AS d
		ON s.dept_id = d.id
		LEFT JOIN cu_college AS c
		ON d.college_id = c.id
		WHERE s.id = #{id}]]>
	</select>
	
	
	
	<select id="selectByUserId" resultType="com.cyber.university.dto.response.UserInfoForUpdateDto">
		<![CDATA[SELECT address, tel, email
		FROM cu_student
		WHERE id = #{userId}]]>
	</select>
	
	
	<update id="updateStudent">
		<![CDATA[UPDATE cu_student SET
		address = #{address}, tel = #{tel}, email = #{email}]]>
		
		
	</update>
	
	<update id="updateStudentInfo">
		<![CDATA[UPDATE cu_student
		SET address = #{address},
		tel = #{tel},
		email = #{email},
		origin_file_name = #{originFileName},
		upload_file_name = #{uploadFileName}
		WHERE id = #{userId}]]>
	</update>
	
	<select id ="findLeaveStudentById" resultType="com.cyber.university.dto.LeaveStudentInfoDto">
		<![CDATA[SELECT
			d.name AS department,
		    s.grade,
		    s.id AS studentId,
		    s.name,
		    s.birth_date,
		    s.email,
		    s.address,
		    s.tel,
		    now() AS today
		FROM cu_student AS s
		JOIN cu_department AS d
		ON s.dept_id = d.id
		WHERE s.id = #{userId}]]>
	</select>
	
<insert id="createLeaveApp">
	<![CDATA[INSERT INTO cu_break
		(student_id, student_grade, from_year, from_semester, to_year, to_semester, type, app_date)
	VALUES (#{userId}, #{studentGrade}, #{fromYear},#{fromSemester}, #{toYear},#{toSemester},#{type},#{appDate})]]>
</insert>

<select id="getLeaveCount">
	<![CDATA[SELECT COUNT(*) FROM cu_break WHERE student_id = #{userId}]]>
</select>



<update id="updateStudentGradeAndSemester1_2">
		<![CDATA[UPDATE cu_student SET
		grade = 1,
		semester = 2
		WHERE id IN
		(
			SELECT student_id FROM
				(
				SELECT student_id, count(tui_year)AS count FROM cu_tuition
				GROUP BY student_id
				) AS a
			WHERE count = 2
		)]]>
	</update>
	<update id="updateStudentGradeAndSemester2_1">
		<![CDATA[UPDATE cu_student SET
		grade = 2,
		semester = 1
		WHERE id IN
		(
			SELECT student_id FROM
				(
				SELECT student_id, count(tui_year)AS count FROM cu_tuition
				GROUP BY student_id
				) AS a
			WHERE count = 3
		)]]>
	</update>
	<update id="updateStudentGradeAndSemester2_2">
		<![CDATA[UPDATE cu_student SET
		grade = 2,
		semester = 2
		WHERE id IN
		(
			SELECT student_id FROM
				(
				SELECT student_id, count(tui_year)AS count FROM cu_tuition
				GROUP BY student_id
				) AS a
			WHERE count = 4
		)]]>
	</update>
	<update id="updateStudentGradeAndSemester3_1">
		<![CDATA[UPDATE cu_student SET
		grade = 3,
		semester = 1
		WHERE id IN
		(
			SELECT student_id FROM
				(
				SELECT student_id, count(tui_year)AS count FROM cu_tuition
				GROUP BY student_id
				) AS a
			WHERE count = 5
		)]]>
	</update>
	<update id="updateStudentGradeAndSemester3_2">
		<![CDATA[UPDATE cu_student SET
		grade = 3,
		semester = 2
		WHERE id IN
		(
			SELECT student_id FROM
				(
				SELECT student_id, count(tui_year)AS count FROM cu_tuition
				GROUP BY student_id
				) AS a
			WHERE count = 6
		)]]>
	</update>
	<update id="updateStudentGradeAndSemester4_1">
		<![CDATA[UPDATE cu_student SET
		grade = 4,
		semester = 1
		WHERE id IN
		(
			SELECT student_id FROM
				(
				SELECT student_id, count(tui_year)AS count FROM cu_tuition
				GROUP BY student_id
				) AS a
			WHERE count = 7
		)]]>
	</update>
	<update id="updateStudentGradeAndSemester4_2">
		<![CDATA[UPDATE cu_student SET
		grade = 4,
		semester = 2
		WHERE id IN
		(
			SELECT student_id FROM
				(
				SELECT student_id, count(tui_year)AS count FROM cu_tuition
				GROUP BY student_id
				) AS a
			WHERE count = 8
		)]]>
	</update>


</mapper>